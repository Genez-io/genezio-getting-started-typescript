"use strict";(()=>{var c=null,l=null,g=!1;async function b(){typeof process<"u"&&process.versions!=null&&process.versions.node!=null&&(c=await import("http"),l=await import("https")),g=!0}async function v(s,e){return(await fetch(`${e}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})).json()}async function w(s,e,n){let a=JSON.stringify(s),t=new URL(e),u={hostname:t.hostname,path:t.search?t.pathname+t.search:t.pathname,port:t.port,method:"POST",headers:{"Content-Type":"application/json","Content-Length":a.length},agent:n},m=e.includes("https")?l:c;return new Promise((T,f)=>{let y=m.request(u,d=>{let h="";d.on("data",k=>{h+=k}),d.on("end",async function(){let k=JSON.parse(h);T(k)})});y.on("error",d=>{f(d)}),y.write(a),y.end()})}var p=class{constructor(e){this.url=void 0;this.agent=void 0;if(this.url=e,c!==null&&l!==null){let n=e.includes("https")?l:c;this.agent=new n.Agent({keepAlive:!0})}}async call(e,...n){let a={jsonrpc:"2.0",method:e,params:n,id:3},t;return g||await b(),c!==null&&l!==null?t=await w(a,this.url,this.agent):t=await v(a,this.url),t.error?t.error.message:t.result}};var o=class o{static async getAllTasksByUser(e){return await o.remote.call("TaskService.getAllTasksByUser",e)}static async createTask(e,n){return await o.remote.call("TaskService.createTask",e,n)}static async updateTask(e,n,a,t){return await o.remote.call("TaskService.updateTask",e,n,a,t)}};o.remote=new p("http://127.0.0.1:8083/TaskService");var r=o;var i=localStorage.getItem("apiToken");i||(i=Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),localStorage.setItem("apiToken",i));async function x(){document.getElementById("modal-error-elem").innerHTML="";let s=document.getElementById("task-title-input").value;if(!s){document.getElementById("modal-error-elem").innerHTML="Title is mandatory";return}r.createTask(i,s).then(e=>{e.success&&location.reload()})}document.getElementById("add-task-btn").addEventListener("click",async s=>{s.preventDefault(),x()});r.getAllTasksByUser(i).then(s=>{if(s.success)for(let n of s.tasks)document.getElementById("tasks").innerHTML+=`
  <div class="mb-3">
    <div class="d-flex align-items-center">
      <input type="checkbox" ${n.solved?"checked":""} class="task_checkbox" id=${n.id}>

      <p class="mb-0" style="margin-right: auto; margin-left: 20px">
        <span>${n.title}</span>
        <a href="" target="_blank">link</a>
      </p>
    </div>
  </div>
  `;let e=document.getElementsByClassName("task_checkbox");for(let n of e)n.addEventListener("change",async a=>{let t=a.target.id,u=s.tasks.find(m=>m.id===t);await r.updateTask(i,t,u.title,a.target.checked)})});})();
//# sourceMappingURL=bundle.js.map
